{"ast":null,"code":"import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n  return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\n\n\nfunction createScopedAnimate(scope) {\n  /**\n   * Implementation\n   */\n  function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n    let animations = [];\n\n    if (isSequence(subjectOrSequence)) {\n      animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n    } else {\n      animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n    }\n\n    const animation = new GroupPlaybackControls(animations);\n\n    if (scope) {\n      scope.animations.push(animation);\n    }\n\n    return animation;\n  }\n\n  return scopedAnimate;\n}\n\nconst animate = createScopedAnimate();\nexport { animate, createScopedAnimate };","map":{"version":3,"names":["GroupPlaybackControls","animateSequence","animateSubject","isSequence","value","Array","isArray","some","createScopedAnimate","scope","scopedAnimate","subjectOrSequence","optionsOrKeyframes","options","animations","animation","push","animate"],"sources":["C:/Users/samih/OneDrive/Desktop/school/website/PERNWebsite/node_modules/framer-motion/dist/es/animation/animate/index.mjs"],"sourcesContent":["import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,YAAtC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACvB,OAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,IAAN,CAAWF,KAAK,CAACC,OAAjB,CAA/B;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC;EAChC;AACJ;AACA;EACI,SAASC,aAAT,CAAuBC,iBAAvB,EAA0CC,kBAA1C,EAA8DC,OAA9D,EAAuE;IACnE,IAAIC,UAAU,GAAG,EAAjB;;IACA,IAAIX,UAAU,CAACQ,iBAAD,CAAd,EAAmC;MAC/BG,UAAU,GAAGb,eAAe,CAACU,iBAAD,EAAoBC,kBAApB,EAAwCH,KAAxC,CAA5B;IACH,CAFD,MAGK;MACDK,UAAU,GAAGZ,cAAc,CAACS,iBAAD,EAAoBC,kBAApB,EAAwCC,OAAxC,EAAiDJ,KAAjD,CAA3B;IACH;;IACD,MAAMM,SAAS,GAAG,IAAIf,qBAAJ,CAA0Bc,UAA1B,CAAlB;;IACA,IAAIL,KAAJ,EAAW;MACPA,KAAK,CAACK,UAAN,CAAiBE,IAAjB,CAAsBD,SAAtB;IACH;;IACD,OAAOA,SAAP;EACH;;EACD,OAAOL,aAAP;AACH;;AACD,MAAMO,OAAO,GAAGT,mBAAmB,EAAnC;AAEA,SAASS,OAAT,EAAkBT,mBAAlB"},"metadata":{},"sourceType":"module"}