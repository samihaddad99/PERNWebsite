{"ast":null,"code":"\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = _ref => {\n  let {\n    children,\n    initial,\n    isPresent,\n    onExitComplete,\n    custom,\n    presenceAffectsLayout,\n    mode,\n    anchorX\n  } = _ref;\n  const presenceChildren = useConstant(newChildrenMap);\n  const id = useId();\n  const memoizedOnExitComplete = useCallback(childId => {\n    presenceChildren.set(childId, true);\n\n    for (const isComplete of presenceChildren.values()) {\n      if (!isComplete) return; // can stop searching when any is incomplete\n    }\n\n    onExitComplete && onExitComplete();\n  }, [presenceChildren, onExitComplete]);\n  const context = useMemo(() => ({\n    id,\n    initial,\n    isPresent,\n    custom,\n    onExitComplete: memoizedOnExitComplete,\n    register: childId => {\n      presenceChildren.set(childId, false);\n      return () => presenceChildren.delete(childId);\n    }\n  }),\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? [Math.random(), memoizedOnExitComplete] : [isPresent, memoizedOnExitComplete]);\n  useMemo(() => {\n    presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n\n  React.useEffect(() => {\n    !isPresent && !presenceChildren.size && onExitComplete && onExitComplete();\n  }, [isPresent]);\n\n  if (mode === \"popLayout\") {\n    children = jsx(PopChild, {\n      isPresent: isPresent,\n      anchorX: anchorX,\n      children: children\n    });\n  }\n\n  return jsx(PresenceContext.Provider, {\n    value: context,\n    children: children\n  });\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nexport { PresenceChild };","map":{"version":3,"names":["jsx","React","useId","useCallback","useMemo","PresenceContext","useConstant","PopChild","PresenceChild","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","mode","anchorX","presenceChildren","newChildrenMap","id","memoizedOnExitComplete","childId","set","isComplete","values","context","register","delete","Math","random","forEach","_","key","useEffect","size","Provider","value","Map"],"sources":["C:/Users/samih/OneDrive/Desktop/school/website/PERNWebsite/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n"],"mappings":"AAAA;;AACA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,aAAa,GAAG,QAAqG;EAAA,IAApG;IAAEC,QAAF;IAAYC,OAAZ;IAAqBC,SAArB;IAAgCC,cAAhC;IAAgDC,MAAhD;IAAwDC,qBAAxD;IAA+EC,IAA/E;IAAqFC;EAArF,CAAoG;EACvH,MAAMC,gBAAgB,GAAGX,WAAW,CAACY,cAAD,CAApC;EACA,MAAMC,EAAE,GAAGjB,KAAK,EAAhB;EACA,MAAMkB,sBAAsB,GAAGjB,WAAW,CAAEkB,OAAD,IAAa;IACpDJ,gBAAgB,CAACK,GAAjB,CAAqBD,OAArB,EAA8B,IAA9B;;IACA,KAAK,MAAME,UAAX,IAAyBN,gBAAgB,CAACO,MAAjB,EAAzB,EAAoD;MAChD,IAAI,CAACD,UAAL,EACI,OAF4C,CAEpC;IACf;;IACDX,cAAc,IAAIA,cAAc,EAAhC;EACH,CAPyC,EAOvC,CAACK,gBAAD,EAAmBL,cAAnB,CAPuC,CAA1C;EAQA,MAAMa,OAAO,GAAGrB,OAAO,CAAC,OAAO;IAC3Be,EAD2B;IAE3BT,OAF2B;IAG3BC,SAH2B;IAI3BE,MAJ2B;IAK3BD,cAAc,EAAEQ,sBALW;IAM3BM,QAAQ,EAAGL,OAAD,IAAa;MACnBJ,gBAAgB,CAACK,GAAjB,CAAqBD,OAArB,EAA8B,KAA9B;MACA,OAAO,MAAMJ,gBAAgB,CAACU,MAAjB,CAAwBN,OAAxB,CAAb;IACH;EAT0B,CAAP,CAAD;EAWvB;AACJ;AACA;AACA;AACA;EACIP,qBAAqB,GACf,CAACc,IAAI,CAACC,MAAL,EAAD,EAAgBT,sBAAhB,CADe,GAEf,CAACT,SAAD,EAAYS,sBAAZ,CAlBiB,CAAvB;EAmBAhB,OAAO,CAAC,MAAM;IACVa,gBAAgB,CAACa,OAAjB,CAAyB,CAACC,CAAD,EAAIC,GAAJ,KAAYf,gBAAgB,CAACK,GAAjB,CAAqBU,GAArB,EAA0B,KAA1B,CAArC;EACH,CAFM,EAEJ,CAACrB,SAAD,CAFI,CAAP;EAGA;AACJ;AACA;AACA;;EACIV,KAAK,CAACgC,SAAN,CAAgB,MAAM;IAClB,CAACtB,SAAD,IACI,CAACM,gBAAgB,CAACiB,IADtB,IAEItB,cAFJ,IAGIA,cAAc,EAHlB;EAIH,CALD,EAKG,CAACD,SAAD,CALH;;EAMA,IAAII,IAAI,KAAK,WAAb,EAA0B;IACtBN,QAAQ,GAAIT,GAAG,CAACO,QAAD,EAAW;MAAEI,SAAS,EAAEA,SAAb;MAAwBK,OAAO,EAAEA,OAAjC;MAA0CP,QAAQ,EAAEA;IAApD,CAAX,CAAf;EACH;;EACD,OAAQT,GAAG,CAACK,eAAe,CAAC8B,QAAjB,EAA2B;IAAEC,KAAK,EAAEX,OAAT;IAAkBhB,QAAQ,EAAEA;EAA5B,CAA3B,CAAX;AACH,CA/CD;;AAgDA,SAASS,cAAT,GAA0B;EACtB,OAAO,IAAImB,GAAJ,EAAP;AACH;;AAED,SAAS7B,aAAT"},"metadata":{},"sourceType":"module"}