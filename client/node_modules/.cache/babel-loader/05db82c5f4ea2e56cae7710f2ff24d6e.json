{"ast":null,"code":"import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\nconst safeMin = 0.001;\n\nfunction findSpring(_ref) {\n  let {\n    duration = springDefaults.duration,\n    bounce = springDefaults.bounce,\n    velocity = springDefaults.velocity,\n    mass = springDefaults.mass\n  } = _ref;\n  let envelope;\n  let derivative;\n  warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n  let dampingRatio = 1 - bounce;\n  /**\n   * Restrict dampingRatio and duration to within acceptable ranges.\n   */\n\n  dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n  duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n\n  if (dampingRatio < 1) {\n    /**\n     * Underdamped spring\n     */\n    envelope = undampedFreq => {\n      const exponentialDecay = undampedFreq * dampingRatio;\n      const delta = exponentialDecay * duration;\n      const a = exponentialDecay - velocity;\n      const b = calcAngularFreq(undampedFreq, dampingRatio);\n      const c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n\n    derivative = undampedFreq => {\n      const exponentialDecay = undampedFreq * dampingRatio;\n      const delta = exponentialDecay * duration;\n      const d = delta * velocity + velocity;\n      const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      const f = Math.exp(-delta);\n      const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    /**\n     * Critically-damped spring\n     */\n    envelope = undampedFreq => {\n      const a = Math.exp(-undampedFreq * duration);\n      const b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n\n    derivative = undampedFreq => {\n      const a = Math.exp(-undampedFreq * duration);\n      const b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n\n  const initialGuess = 5 / duration;\n  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n  duration = secondsToMilliseconds(duration);\n\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: springDefaults.stiffness,\n      damping: springDefaults.damping,\n      duration\n    };\n  } else {\n    const stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n      duration\n    };\n  }\n}\n\nconst rootIterations = 12;\n\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  let result = initialGuess;\n\n  for (let i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n\n  return result;\n}\n\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };","map":{"version":3,"names":["warning","secondsToMilliseconds","millisecondsToSeconds","clamp","springDefaults","safeMin","findSpring","duration","bounce","velocity","mass","envelope","derivative","maxDuration","dampingRatio","minDamping","maxDamping","minDuration","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","Math","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i"],"sources":["C:/Users/samih/OneDrive/Desktop/school/website/PERNWebsite/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs"],"sourcesContent":["import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}