{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samih\\\\OneDrive\\\\Desktop\\\\PERNWebsite\\\\client\\\\src\\\\components\\\\Database.js\";\n\n/**\r\n * Author: Sami Haddad\r\n * Date Created: 8/23/2022\r\n * Last Modified: 8/24/2022\r\n */\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Database() {\n  /* const [merchants, setMerchants] = useState(false);\r\n  const backend = \"https://pernstack-backend.herokuapp.com/\";\r\n    useEffect(() => {\r\n      getMerchant();\r\n  }, []);\r\n    function getMerchant() {\r\n      fetch(`${backend}`)\r\n        .then(response => {\r\n          return response.text();\r\n        })\r\n        .then(data => {\r\n          setMerchants(data);\r\n        });\r\n    }\r\n      function createMerchant() {\r\n      let name = prompt('Enter merchant name');\r\n      let email = prompt('Enter merchant email');\r\n        fetch(`${backend}merchants`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({name, email}),\r\n      })\r\n        .then(response => {\r\n          return response.text();\r\n        })\r\n        .then(data => {\r\n          alert(data);\r\n          getMerchant();\r\n        });\r\n    }\r\n      function deleteMerchant(id) {\r\n      // let id = prompt('Enter merchant id');\r\n        fetch(`${backend}merchants/${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n        .then(response => {\r\n          return response.text();\r\n        })\r\n        .then(data => {\r\n          alert(data);\r\n          getMerchant();\r\n        });\r\n    }\r\n      function editMerchant(id) {\r\n      // let id = prompt('Enter merchant id');\r\n      let name = prompt('Enter merchant name');\r\n      let email = prompt('Enter merchant email');\r\n        // console.log(id);\r\n        fetch(`${backend}merchants/${id}`, {\r\n        \r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        method: 'PUT', \r\n        body: JSON.stringify({name,email}),\r\n      })\r\n        .then(response => {\r\n          return response.text();\r\n        })\r\n        .then(data => {\r\n          alert(data);\r\n          getMerchant();\r\n        });\r\n    }\r\n      let tbl = [\r\n      { id: \"1\", name: \"Anom\", email: \"Male\" },\r\n      { id: \"2\", name: \"Megha\", email: \"Female\" },\r\n      { id: \"3\", name: \"Subham\", email: \"Male\"},\r\n    ];\r\n      function convTable(merchants) {\r\n      let table = JSON.parse(merchants);\r\n      tbl = table;\r\n    }\r\n    return (\r\n  <div>\r\n      <div className=\"buttons\"><Button onClick={createMerchant}>Add Merchant</Button></div>\r\n      \r\n      <br />\r\n      <h3>Table of Merchants</h3>\r\n      {document.addEventListener('DOMContentLoaded', convTable(merchants))}\r\n      <div className=\"table-responsive\">\r\n      <Table className=\"table table-dark\">\r\n      <thead>\r\n          <tr>\r\n          <th>ID</th><th>Name</th><th>Email</th><th>Actions</th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n          {tbl && tbl.map((val, key) => {\r\n          return (\r\n              <tr key={val.id}>\r\n              <td>{val.id}</td>\r\n              <td>{val.name}</td>\r\n              <td>{val.email}</td>\r\n              <td className=\"flex\"><Button onClick={() => {deleteMerchant(val.id)}}>Delete</Button><Button onClick={() => {editMerchant(val.id)}}>Edit</Button></td>\r\n              </tr>\r\n          )})}\r\n      </tbody>\r\n      </Table>\r\n      </div>\r\n  </div>\r\n  ) */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"under progress...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 13\n  }, this);\n}\n_c = Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","Table","Button","Database"],"sources":["C:/Users/samih/OneDrive/Desktop/PERNWebsite/client/src/components/Database.js"],"sourcesContent":["/**\r\n * Author: Sami Haddad\r\n * Date Created: 8/23/2022\r\n * Last Modified: 8/24/2022\r\n */\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Table  from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nexport default function Database() {\r\n\r\n    /* const [merchants, setMerchants] = useState(false);\r\n    const backend = \"https://pernstack-backend.herokuapp.com/\";\r\n\r\n    useEffect(() => {\r\n        getMerchant();\r\n    }, []);\r\n\r\n    function getMerchant() {\r\n        fetch(`${backend}`)\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            setMerchants(data);\r\n          });\r\n      }\r\n\r\n      function createMerchant() {\r\n        let name = prompt('Enter merchant name');\r\n        let email = prompt('Enter merchant email');\r\n\r\n        fetch(`${backend}merchants`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({name, email}),\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getMerchant();\r\n          });\r\n      }\r\n\r\n      function deleteMerchant(id) {\r\n        // let id = prompt('Enter merchant id');\r\n\r\n        fetch(`${backend}merchants/${id}`, {\r\n          method: 'DELETE',\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getMerchant();\r\n          });\r\n      }\r\n\r\n      function editMerchant(id) {\r\n        // let id = prompt('Enter merchant id');\r\n        let name = prompt('Enter merchant name');\r\n        let email = prompt('Enter merchant email');\r\n\r\n        // console.log(id);\r\n\r\n        fetch(`${backend}merchants/${id}`, {\r\n          \r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT', \r\n          body: JSON.stringify({name,email}),\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getMerchant();\r\n          });\r\n      }\r\n\r\n      let tbl = [\r\n        { id: \"1\", name: \"Anom\", email: \"Male\" },\r\n        { id: \"2\", name: \"Megha\", email: \"Female\" },\r\n        { id: \"3\", name: \"Subham\", email: \"Male\"},\r\n      ];\r\n\r\n      function convTable(merchants) {\r\n        let table = JSON.parse(merchants);\r\n        tbl = table;\r\n      }\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"buttons\"><Button onClick={createMerchant}>Add Merchant</Button></div>\r\n        \r\n        <br />\r\n        <h3>Table of Merchants</h3>\r\n        {document.addEventListener('DOMContentLoaded', convTable(merchants))}\r\n        <div className=\"table-responsive\">\r\n        <Table className=\"table table-dark\">\r\n        <thead>\r\n            <tr>\r\n            <th>ID</th><th>Name</th><th>Email</th><th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {tbl && tbl.map((val, key) => {\r\n            return (\r\n                <tr key={val.id}>\r\n                <td>{val.id}</td>\r\n                <td>{val.name}</td>\r\n                <td>{val.email}</td>\r\n                <td className=\"flex\"><Button onClick={() => {deleteMerchant(val.id)}}>Delete</Button><Button onClick={() => {editMerchant(val.id)}}>Edit</Button></td>\r\n                </tr>\r\n            )})}\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n    </div>\r\n    ) */\r\n    return (<div>under progress...</div>)\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,eAAe,SAASC,QAAT,GAAoaI,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AACH;KAvHuBA,Q"},"metadata":{},"sourceType":"module"}