{"ast":null,"code":"import { secondsToMilliseconds } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { mapEasingToNativeEasing } from './easing.mjs';\nconst defaultEasing = \"easeOut\";\n\nfunction applyGeneratorOptions(options) {\n  var _a;\n\n  if (isGenerator(options.type)) {\n    const generatorOptions = createGeneratorEasing(options, 100, options.type);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : defaultEasing;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n  } else {\n    options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\n    options.ease = options.ease || defaultEasing;\n  }\n} // TODO: Reuse for NativeAnimation\n\n\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\n  var _a;\n\n  const nativeKeyframes = {};\n  const nativeOptions = {\n    fill: \"both\",\n    easing: \"linear\",\n    composite: \"replace\"\n  };\n  nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\n  applyGeneratorOptions(options);\n  nativeOptions.duration = options.duration;\n  const {\n    ease,\n    times\n  } = options;\n  if (times) nativeKeyframes.offset = times;\n  nativeKeyframes[valueName] = keyframes;\n  const easing = mapEasingToNativeEasing(ease, options.duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) {\n    nativeKeyframes.easing = easing;\n  } else {\n    nativeOptions.easing = easing;\n  }\n\n  return {\n    keyframes: nativeKeyframes,\n    options: nativeOptions\n  };\n}\n\nexport { applyGeneratorOptions, convertMotionOptionsToNative };","map":{"version":3,"names":["secondsToMilliseconds","supportsLinearEasing","createGeneratorEasing","isGenerator","mapEasingToNativeEasing","defaultEasing","applyGeneratorOptions","options","_a","type","generatorOptions","ease","duration","convertMotionOptionsToNative","valueName","keyframes","nativeKeyframes","nativeOptions","fill","easing","composite","delay","times","offset","Array","isArray"],"sources":["C:/Users/samih/OneDrive/Desktop/school/website/PERNWebsite/node_modules/motion-dom/dist/es/animation/waapi/utils/convert-options.mjs"],"sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { mapEasingToNativeEasing } from './easing.mjs';\n\nconst defaultEasing = \"easeOut\";\nfunction applyGeneratorOptions(options) {\n    var _a;\n    if (isGenerator(options.type)) {\n        const generatorOptions = createGeneratorEasing(options, 100, options.type);\n        options.ease = supportsLinearEasing()\n            ? generatorOptions.ease\n            : defaultEasing;\n        options.duration = secondsToMilliseconds(generatorOptions.duration);\n        options.type = \"keyframes\";\n    }\n    else {\n        options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\n        options.ease = options.ease || defaultEasing;\n    }\n}\n// TODO: Reuse for NativeAnimation\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\n    var _a;\n    const nativeKeyframes = {};\n    const nativeOptions = {\n        fill: \"both\",\n        easing: \"linear\",\n        composite: \"replace\",\n    };\n    nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\n    applyGeneratorOptions(options);\n    nativeOptions.duration = options.duration;\n    const { ease, times } = options;\n    if (times)\n        nativeKeyframes.offset = times;\n    nativeKeyframes[valueName] = keyframes;\n    const easing = mapEasingToNativeEasing(ease, options.duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing)) {\n        nativeKeyframes.easing = easing;\n    }\n    else {\n        nativeOptions.easing = easing;\n    }\n    return {\n        keyframes: nativeKeyframes,\n        options: nativeOptions,\n    };\n}\n\nexport { applyGeneratorOptions, convertMotionOptionsToNative };\n"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,cAAtC;AACA,SAASC,oBAAT,QAAqC,2CAArC;AACA,SAASC,qBAAT,QAAsC,oDAAtC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,MAAMC,aAAa,GAAG,SAAtB;;AACA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;EACpC,IAAIC,EAAJ;;EACA,IAAIL,WAAW,CAACI,OAAO,CAACE,IAAT,CAAf,EAA+B;IAC3B,MAAMC,gBAAgB,GAAGR,qBAAqB,CAACK,OAAD,EAAU,GAAV,EAAeA,OAAO,CAACE,IAAvB,CAA9C;IACAF,OAAO,CAACI,IAAR,GAAeV,oBAAoB,KAC7BS,gBAAgB,CAACC,IADY,GAE7BN,aAFN;IAGAE,OAAO,CAACK,QAAR,GAAmBZ,qBAAqB,CAACU,gBAAgB,CAACE,QAAlB,CAAxC;IACAL,OAAO,CAACE,IAAR,GAAe,WAAf;EACH,CAPD,MAQK;IACDF,OAAO,CAACK,QAAR,GAAmBZ,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACK,QAAd,MAA4B,IAA5B,IAAoCJ,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyD,GAA1D,CAAxC;IACAD,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACI,IAAR,IAAgBN,aAA/B;EACH;AACJ,C,CACD;;;AACA,SAASQ,4BAAT,CAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DR,OAA5D,EAAqE;EACjE,IAAIC,EAAJ;;EACA,MAAMQ,eAAe,GAAG,EAAxB;EACA,MAAMC,aAAa,GAAG;IAClBC,IAAI,EAAE,MADY;IAElBC,MAAM,EAAE,QAFU;IAGlBC,SAAS,EAAE;EAHO,CAAtB;EAKAH,aAAa,CAACI,KAAd,GAAsBrB,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACc,KAAd,MAAyB,IAAzB,IAAiCb,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsD,CAAvD,CAA3C;EACAF,qBAAqB,CAACC,OAAD,CAArB;EACAU,aAAa,CAACL,QAAd,GAAyBL,OAAO,CAACK,QAAjC;EACA,MAAM;IAAED,IAAF;IAAQW;EAAR,IAAkBf,OAAxB;EACA,IAAIe,KAAJ,EACIN,eAAe,CAACO,MAAhB,GAAyBD,KAAzB;EACJN,eAAe,CAACF,SAAD,CAAf,GAA6BC,SAA7B;EACA,MAAMI,MAAM,GAAGf,uBAAuB,CAACO,IAAD,EAAOJ,OAAO,CAACK,QAAf,CAAtC;EACA;AACJ;AACA;;EACI,IAAIY,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAJ,EAA2B;IACvBH,eAAe,CAACG,MAAhB,GAAyBA,MAAzB;EACH,CAFD,MAGK;IACDF,aAAa,CAACE,MAAd,GAAuBA,MAAvB;EACH;;EACD,OAAO;IACHJ,SAAS,EAAEC,eADR;IAEHT,OAAO,EAAEU;EAFN,CAAP;AAIH;;AAED,SAASX,qBAAT,EAAgCO,4BAAhC"},"metadata":{},"sourceType":"module"}