{"ast":null,"code":"const namedEdges = {\n  start: 0,\n  center: 0.5,\n  end: 1\n};\n\nfunction resolveEdge(edge, length) {\n  let inset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let delta = 0;\n  /**\n   * If we have this edge defined as a preset, replace the definition\n   * with the numerical value.\n   */\n\n  if (edge in namedEdges) {\n    edge = namedEdges[edge];\n  }\n  /**\n   * Handle unit values\n   */\n\n\n  if (typeof edge === \"string\") {\n    const asNumber = parseFloat(edge);\n\n    if (edge.endsWith(\"px\")) {\n      delta = asNumber;\n    } else if (edge.endsWith(\"%\")) {\n      edge = asNumber / 100;\n    } else if (edge.endsWith(\"vw\")) {\n      delta = asNumber / 100 * document.documentElement.clientWidth;\n    } else if (edge.endsWith(\"vh\")) {\n      delta = asNumber / 100 * document.documentElement.clientHeight;\n    } else {\n      edge = asNumber;\n    }\n  }\n  /**\n   * If the edge is defined as a number, handle as a progress value.\n   */\n\n\n  if (typeof edge === \"number\") {\n    delta = length * edge;\n  }\n\n  return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };","map":{"version":3,"names":["namedEdges","start","center","end","resolveEdge","edge","length","inset","delta","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight"],"sources":["C:/Users/samih/OneDrive/Desktop/school/website/PERNWebsite/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs"],"sourcesContent":["const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG;EACfC,KAAK,EAAE,CADQ;EAEfC,MAAM,EAAE,GAFO;EAGfC,GAAG,EAAE;AAHU,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAA8C;EAAA,IAAXC,KAAW,uEAAH,CAAG;EAC1C,IAAIC,KAAK,GAAG,CAAZ;EACA;AACJ;AACA;AACA;;EACI,IAAIH,IAAI,IAAIL,UAAZ,EAAwB;IACpBK,IAAI,GAAGL,UAAU,CAACK,IAAD,CAAjB;EACH;EACD;AACJ;AACA;;;EACI,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;IAC1B,MAAMI,QAAQ,GAAGC,UAAU,CAACL,IAAD,CAA3B;;IACA,IAAIA,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;MACrBH,KAAK,GAAGC,QAAR;IACH,CAFD,MAGK,IAAIJ,IAAI,CAACM,QAAL,CAAc,GAAd,CAAJ,EAAwB;MACzBN,IAAI,GAAGI,QAAQ,GAAG,GAAlB;IACH,CAFI,MAGA,IAAIJ,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;MAC1BH,KAAK,GAAIC,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBC,WAApD;IACH,CAFI,MAGA,IAAIT,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;MAC1BH,KAAK,GAAIC,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBE,YAApD;IACH,CAFI,MAGA;MACDV,IAAI,GAAGI,QAAP;IACH;EACJ;EACD;AACJ;AACA;;;EACI,IAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;IAC1BG,KAAK,GAAGF,MAAM,GAAGD,IAAjB;EACH;;EACD,OAAOE,KAAK,GAAGC,KAAf;AACH;;AAED,SAASR,UAAT,EAAqBI,WAArB"},"metadata":{},"sourceType":"module"}