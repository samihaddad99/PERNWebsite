[{"C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\index.js":"1","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\App.js":"2","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\AboutMe.js":"3","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Contact.js":"4","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Database.js":"5","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Projects.js":"6"},{"size":151,"mtime":1732215585959,"results":"7","hashOfConfig":"8"},{"size":1087,"mtime":1732218607518,"results":"9","hashOfConfig":"8"},{"size":1752,"mtime":1732215585880,"results":"10","hashOfConfig":"8"},{"size":608,"mtime":1732218178756,"results":"11","hashOfConfig":"8"},{"size":4494,"mtime":1732215585880,"results":"12","hashOfConfig":"8"},{"size":2501,"mtime":1732220703072,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1hoq2c3",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\index.js",[],[],[],"C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\App.js",["35","36","37"],[],"C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\AboutMe.js",["38"],[],"/**\r\n * Author: Sami Haddad\r\n * Date Created: 8/23/2022\r\n * Last Modified: 8/24/2022\r\n */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default function AboutMe() {\r\n    return <div className=\"AboutSection\">\r\n<p className=\"BodyText\">\r\n  <img className=\"pfp\" width=\"300\" height=\"300\" src={require('./imgs/pfp.png')} alt=\"Me\"></img>\r\n  Hello and Welcome to my PERN (Postgresql/Express/React/Node) stack website!\r\n  Feel free to play around with the Database (from the tabs above).<br></br><br></br>\r\n  My name is Sami Haddad\r\n  I'm an under-graduate student\r\n  currently attending Sheridan College for a Computer Science degree in Data Analytics. <br></br><br></br>\r\n  Some of my hobbies include playing piano, making music,\r\n  and programming.\r\n  I have been learning TensorFlow 2.0 using Python and have finished <a href=\"https://www.freecodecamp.org/learn/machine-learning-with-python/\">a course on Machine-Learning and A.I</a> and I would like to be apart of this technological breakthrough.<br></br><br></br>\r\n  I have won second place in my <a href=\"https://devpost.com/software/tiny-techs\">first Hackathon (Hackville 2023)</a>.\r\n  I have also won a Google Award at the <a href=\"https://devpost.com/software/maplebridge\">last hackathon I competed in</a>,\r\n    where I mainly worked on implementing A.I features in our mobile application called MapleBridge.<br></br><br></br>\r\n\r\n  While attending school, I am also working on a continuation of my team's <a href=\"https://www.youtube.com/watch?v=Y8fani3ousg&t=19s&ab_channel=JacobBullock\">Capstone project</a>, where we made it to the top 10 projects\r\n  for the 2023-2024 year at Sheridan. We are expecting completion of our MVP by the 3rd quarter of 2025.\r\n</p>\r\n</div>\r\n}","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Contact.js",["39"],[],"C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Database.js",["40"],[],"/**\r\n * Author: Sami Haddad\r\n * Date Created: 8/23/2022\r\n * Last Modified: 8/24/2022\r\n */\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Table  from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nexport default function Database() {\r\n\r\n    const [users, setUsers] = useState(false);\r\n    const backend = \"https://pernstack-backend.herokuapp.com\";\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    function getUsers() {\r\n      fetch(`${backend}/users`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(\"Response object:\", response);\r\n        return response.text();  // Get the raw body as text\r\n      })\r\n      .then(rawBody => {\r\n        console.log(\"Raw body as text:\", rawBody);  // Log the raw body to check its format\r\n    \r\n        try {\r\n          const parsedData = JSON.parse(rawBody);  // Attempt to parse the JSON\r\n          console.log(\"Parsed JSON data:\", parsedData);\r\n          setUsers(parsedData);  // Pass parsed data to your React state\r\n        } catch (error) {\r\n          console.error(\"Failed to parse JSON:\", error);  // Log any parsing errors\r\n          // Optionally, you can display a default message or handle the error in a different way\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error occurred:\", error);  // Log any errors from the fetch call\r\n      });\r\n    }\r\n      function createUser() {\r\n        let name = prompt('Enter user name');\r\n        let email = prompt('Enter user email');\r\n\r\n        fetch(`${backend}/users`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({name, email}),\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getUsers();\r\n          });\r\n      }\r\n\r\n      function deleteUser(id) {\r\n        // let id = prompt('Enter user id');\r\n\r\n        fetch(`${backend}/users/${id}`, {\r\n          method: 'DELETE',\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getUsers();\r\n          });\r\n      }\r\n\r\n      function editUser(id) {\r\n        // let id = prompt('Enter user id');\r\n        let name = prompt('Enter subscriber name');\r\n        let email = prompt('Enter subscriber email');\r\n\r\n        // console.log(id);\r\n\r\n        fetch(`${backend}/users/${id}`, {\r\n          \r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT', \r\n          body: JSON.stringify({name,email}),\r\n        })\r\n          .then(response => {\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            alert(data);\r\n            getUsers();\r\n          });\r\n      }\r\n\r\n      let tbl = [\r\n        { id: \"1\", name: \"Anom\", email: \"Male\" },\r\n        { id: \"2\", name: \"Megha\", email: \"Female\" },\r\n        { id: \"3\", name: \"Subham\", email: \"Male\"},\r\n      ];\r\n\r\n      function convTable(users) {\r\n        let table = JSON.parse(users);\r\n        tbl = table;\r\n      }\r\n\r\n    return (\r\n    <div>\r\n        <h2 className=\"heading\">Database</h2>\r\n        \r\n        \r\n        <br />\r\n        <h3>Table of Users</h3>\r\n        {document.addEventListener('DOMContentLoaded', convTable(users))}\r\n        <div className=\"table-responsive\">\r\n        <Table className=\"table table-dark\">\r\n        <thead>\r\n            <tr>\r\n            <th>ID</th><th>Name</th><th>Email</th><th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {tbl && tbl.map((val, key) => {\r\n            return (\r\n                <tr key={val.id}>\r\n                <td>{val.id}</td>\r\n                <td>{val.name}</td>\r\n                <td>{val.email}</td>\r\n                <td className=\"flex\"><Button onClick={() => {deleteUser(val.id)}}>Delete</Button><Button onClick={() => {editUser(val.id)}}>Edit</Button></td>\r\n                </tr>\r\n            )})}\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td><div className=\"buttons\"><Button onClick={createUser}>Add User</Button></div></td>\r\n            </tr>\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","C:\\Users\\samih\\Desktop\\School\\website\\PERN\\PERNWebsite\\client\\src\\components\\Projects.js",["41","42"],[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":24},{"ruleId":"43","severity":1,"message":"47","line":1,"column":26,"nodeType":"45","messageId":"46","endLine":1,"endColumn":35},{"ruleId":"43","severity":1,"message":"48","line":11,"column":8,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"50","line":17,"column":10,"nodeType":"45","messageId":"46","endLine":17,"endColumn":19},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Database' is defined but never used.","'ReactDOM' is defined but never used.","'component' is defined but never used."]